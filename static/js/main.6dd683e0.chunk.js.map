{"version":3,"sources":["components/print.module.css","components/Forms/printTTN.module.css","components/navbar.module.css","components/Forms/requisitesActs.module.css","components/form.module.css","components/home.jpeg","components/home.tsx","components/navbar.tsx","utils/Modal.tsx","components/Forms/FormRequisitesFirm.tsx","utils/useInput.ts","components/Forms/FormRequisitesAct.tsx","utils/numOfStr.ts","components/Forms/FormToPrintAct.tsx","components/Forms/FormToPrintTTN.tsx","utils/chunkArray.ts","components/Print.tsx","components/Form.tsx","components/Forms/FormToPrintTN.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Home","className","src","homeimage","Navbar","s","nav_div","nav","item","to","active","Modal","setActive","children","onClick","e","stopPropagation","FormRequisitesFirm","React","memo","unp","changeUnp","changeNameFirm","changeAddress","changeBankAccount","nameFirm","bankAccount","address","val","useState","modalActive","setModalActive","console","log","css","button","inp","input_field","type","id","value","onChange","input","maxLength","style","width","useInput","initialValue","setValue","currentTarget","localStorage","setItem","reset","useInputNum","ev","isFinite","FormRequisitesAct","docNumber","changeDocNumber","service","vat","changeVat","docDate","changeQuantity","quantity","changePrice","price","changeService","unit","changeUnit","changeDocDate","clearButton","input_fields","label","list","numOfString","n","s1","b","m999","f","t","Math","floor","d","Array","forms","plural","i","j","FormToPrintAct","nameOfForm","raw","endRaw","dateStr","nameFirmOwn","addressOwn","arrDiv","unpOwn","bankAccountOwn","totalOfString","grid","cell_1","cell_3","cell_5","customer","map","cell","table","table_2","table_5","index","table_4","cell_4","total_of_string","toFixed","cell_7","cell_6","FormToPrintTTN","rawTTN","endRawTTN","newRawTTN","chunk_size","arrayLength","length","tempArray","myChunk","slice","push","chunkArray","totalVatString","toUpperCase","unp_string","unp_1","unp_2","date","auto","up","ts","ComponentToPrint","forwardRef","props","ref","initialRaw","setRaw","setRawTTN","setEndRaw","setEndRawTTN","total","setTotal","error","setError","getItem","cost","costVat","useEffect","useCallback","fill","toString","button_block","form_req","copyRaw","filter","array","color","media","Form","form","componentRef","useRef","handlePrint","useReactToPrint","content","current","FormToPrintTN","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dd683e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"print_grid__2WllD\",\"cell_1\":\"print_cell_1__20GGV\",\"customer\":\"print_customer__15vJk\",\"cell_2\":\"print_cell_2__2D0Tq\",\"cell_3\":\"print_cell_3__2xfhJ\",\"cell_4\":\"print_cell_4__ADDa7\",\"cell_6\":\"print_cell_6__V-GM0\",\"cell_7\":\"print_cell_7__2xBgZ\",\"total_of_string\":\"print_total_of_string__3Kqq-\",\"cell_5\":\"print_cell_5__4cCLA\",\"table\":\"print_table__2AXD9\",\"table_2\":\"print_table_2__E2wr5\",\"table_3\":\"print_table_3__2rHdd\",\"table_4\":\"print_table_4__18hvF\",\"table_5\":\"print_table_5__2URix\",\"service\":\"print_service__3sZAw\",\"button_block\":\"print_button_block__zfx7E\",\"input_field\":\"print_input_field__2KwVs\",\"button\":\"print_button__3HJXy\",\"label\":\"print_label__2k_z9\",\"input\":\"print_input__Wg2vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"up\":\"printTTN_up__33dxW\",\"unp_string\":\"printTTN_unp_string__VGN_N\",\"unp_1\":\"printTTN_unp_1__3bsDo\",\"unp_2\":\"printTTN_unp_2__1RZJ9\",\"date\":\"printTTN_date__rx7YL\",\"auto\":\"printTTN_auto__2zeK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__1qu4T\",\"nav_div\":\"navbar_nav_div__3moL5\",\"item\":\"navbar_item__3hqwi\",\"active\":\"navbar_active__edz2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"requisitesActs_button__4KyQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__QVyAX\",\"button\":\"form_button__38igF\"};","export default __webpack_public_path__ + \"static/media/home.90338249.jpeg\";","import React from 'react';\r\nimport homeimage from './home.jpeg'\r\n\r\n\r\n\r\nfunction Home () {\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            ГЛАВНАЯ\r\n            <img src={homeimage}/>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport s from './navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.nav_div}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/home' >Главная</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/act_form' >Акт выполненных работ</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/ttn_form' >ТТН</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/tn_form' >ТН</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/invoice_form' >Счет-фактура</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/contract' >Договор</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {Dispatch} from \"react\";\r\nimport \"./modal.css\"\r\n\r\ntype ModalPropsType = {\r\n    active:boolean\r\n    setActive:Dispatch<boolean>\r\n    children:React.ReactChild | React.ReactNode\r\n}\r\n\r\n\r\nexport const Modal = ({active, setActive, children}:ModalPropsType) =>{\r\n\r\n    return (\r\n        <div className={active?'modal active':'modal'} onClick={()=>setActive(false)}>\r\n        <div className={active?'modal_content active':'modal_content'} onClick={(e)=>e.stopPropagation()}>\r\n            {children}\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Modal} from \"../../utils/Modal\";\r\nimport css from \"./requisitesActs.module.css\"\r\nimport inp from \"./../print.module.css\"\r\n\r\ninterface TypePropsFormRequisitesFirm {\r\n    unp: string | number\r\n    changeUnp: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeNameFirm: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeAddress: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeBankAccount: (e: ChangeEvent<HTMLInputElement>) => void\r\n    bankAccount: string\r\n    nameFirm: string\r\n    address: string\r\n    val: string\r\n}\r\n\r\nexport const FormRequisitesFirm = React.memo(({\r\n                                                  unp,\r\n                                                  changeUnp,\r\n                                                  changeNameFirm,\r\n                                                  changeAddress,\r\n                                                  changeBankAccount,\r\n                                                  nameFirm,\r\n                                                  bankAccount,\r\n                                                  address,\r\n                                                  val,\r\n                                              }: TypePropsFormRequisitesFirm) => {\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    console.log(\"render Form\")\r\n    return (<div>\r\n        {val === 'customer' &&\r\n        <button className={css.button}\r\n                onClick={() => setModalActive(true)}\r\n        > РЕКВИЗИТЫ ЗАКАЗЧИКА\r\n        </button>}\r\n        {val === 'executor' && <div>\r\n            <button className={css.button}\r\n                    onClick={() => setModalActive(true)}\r\n            > РЕКВИЗИТЫ ИСПОЛНИТЕЛЯ\r\n            </button>\r\n        </div>}\r\n        <Modal active={modalActive} setActive={setModalActive}>\r\n            <div className={inp.input_field}>\r\n                <label >введите УНП: </label>\r\n                <input type={\"text\"} id={val === 'customer' ? 'unp' : 'unpOwn'} value={unp} onChange={changeUnp}\r\n                        className={inp.input} maxLength={9}/>\r\n            </div>\r\n            <div className={inp.input_field}>\r\n                <label>введите наименование организации: </label>\r\n                <input type={\"text\"} id={val === 'customer' ? 'nameFirm' : 'nameFirmOwn'} value={nameFirm}\r\n                       className={inp.input} onChange={changeNameFirm} maxLength={30}/>\r\n            </div>\r\n            <div className={inp.input_field}>\r\n                <label>введите адрес организации: </label>\r\n                <input type={\"text\"} id={val === 'customer' ? 'address' : 'addressOwn'} style={{width: '250px'}}\r\n                       className={inp.input} value={address} onChange={changeAddress} maxLength={40}/>\r\n            </div>\r\n            <div className={inp.input_field}>\r\n                <label>введите расчетный счет организации: </label>\r\n                <input type={\"text\"} id={val === 'customer' ? 'bankAccount' : 'bankAccountOwn'}\r\n                       className={inp.input} style={{width: '250px'}}\r\n                       value={bankAccount} onChange={changeBankAccount} maxLength={28}/>\r\n            </div>\r\n\r\n        </Modal>\r\n    </div>)\r\n})","import {ChangeEvent, useState} from \"react\";\r\n\r\n\r\nexport function useInput(initialValue:string){\r\n    const [value,setValue] = useState(initialValue)\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        setValue(e.currentTarget.value)\r\n        localStorage.setItem(e.currentTarget.id, e.currentTarget.value)\r\n    }\r\n    const reset = (e:string) => {\r\n      setValue(e)\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange,\r\n        reset\r\n    }\r\n}\r\n\r\nexport function useInputNum(initialValue:string|number){\r\n    const [value,setValue] = useState(initialValue)\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        localStorage.setItem(e.currentTarget.id, e.currentTarget.value)\r\n        let ev = e.currentTarget.value\r\n        if (isFinite(+ev)) return setValue(ev)\r\n        return null\r\n    }\r\n    const reset = (e:string) => {\r\n        setValue(e)\r\n    }\r\n    return {\r\n        value,\r\n        onChange,\r\n        reset\r\n    }\r\n}","import css from \"../print.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ninterface TypePropsFormRequisitesAct {\r\n    docNumber: string | number\r\n    docDate: string | number\r\n    service: string | number\r\n    quantity: string | number\r\n    unit: string | number\r\n    price: string | number\r\n    vat: string | number\r\n    changeDocNumber: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeDocDate: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeUnit: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeService: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeQuantity: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePrice: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeVat: (e: ChangeEvent<HTMLInputElement>) => void\r\n    clearButton: () => void\r\n}\r\n\r\nexport const FormRequisitesAct = React.memo(({\r\n                                                 docNumber, changeDocNumber, service, vat, changeVat, docDate,\r\n                                                 changeQuantity, quantity, changePrice, price,\r\n                                                 changeService, unit, changeUnit, changeDocDate, clearButton,\r\n                                             }: TypePropsFormRequisitesAct) => {\r\n\r\n    console.log(\"render Act\")\r\n    return (<div>\r\n            <div className={css.input_fields}>\r\n                <div className={css.input_field}>\r\n                    <label className={css.label}>введите дату документа: </label>\r\n                    <input type={\"date\"} id={'docDate'}\r\n                           className={css.input}\r\n                           value={docDate}\r\n                           onChange={changeDocDate}\r\n                    />\r\n                </div>\r\n                <div className={css.input_field}>\r\n                    <label className={css.label}>введите номер документа: </label>\r\n                    <input type={\"text\"} id={'docNumber'}\r\n                           className={css.input}\r\n                           value={docNumber}\r\n                           onChange={changeDocNumber}\r\n                           maxLength={9}/>\r\n                </div>\r\n                <div className={css.input_field}>\r\n                    <label className={css.label}>введите наименование услуги (товара): </label>\r\n                    <input type={\"text\"} className={service === '' ? css.service : css.input}\r\n                           id={'service'} value={service} onChange={changeService}/>\r\n                </div>\r\n                <div className={css.input_field}>\r\n                    <label className={css.label}>введите единицу измерения: </label>\r\n                    <input type={\"text\"} id={'unit'}\r\n                           className={css.input}\r\n                           value={unit} onChange={changeUnit} maxLength={3}/>\r\n                </div>\r\n                <div className={css.input_field}>\r\n                    <label className={css.label}>введите количество: </label>\r\n                    <input type={\"text\"} id={'quantity'} className={quantity === '' ? css.service : css.input}\r\n                           value={quantity} onChange={changeQuantity}/>\r\n                </div>\r\n                <div className={css.input_field}>\r\n                    <label className={css.label}>введите цену: </label>\r\n                    <input type={\"text\"} id={'price'} className={price === '' ? css.service : css.input}\r\n                           value={price} onChange={changePrice}/>\r\n                </div>\r\n                <div className={css.input_field}>\r\n                    <label className={css.label}>введите НДС %: </label>\r\n                    <input list={\"vat-list\"} id={'vat'} value={vat}\r\n                           className={css.input}\r\n                           onChange={changeVat}/>\r\n                </div>\r\n                <datalist id=\"vat-list\">\r\n                    <option value=\"20\"/>\r\n                    <option value=\"10\"/>\r\n                    <option value=\"0\"/>\r\n                    <option value=\"Без НДС\"/>\r\n\r\n                </datalist>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <button className={css.button} onClick={clearButton}> Очистить поля ввода</button>\r\n        </div>\r\n\r\n    )\r\n})","\r\nfunction plural(n:number, forms:Array<string>) {\r\n\treturn forms[n%10===1 && n%100!==11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2];\r\n}\r\nexport function numOfString(n:number){\r\n    let s1=[['','',''],\r\n        [['один','одна'],['десять','одиннадцать','двенадцать',\r\n            'тринадцать','четырнадцать','пятнадцать','шестнадцать','семнадцать','восемнадцать','девятнадцать'],'сто'],\r\n        [['два','две'],'двадцать','двести'],\r\n        ['три','тридцать','триста'],\r\n        ['четыре','сорок','четыреста'],\r\n        ['пять','пятьдесят','пятьсот'],\r\n        ['шесть','шестьдесят','шестьсот'],\r\n        ['семь','семьдесят','семьсот'],\r\n        ['восемь','восемьдесят','восемьсот'],\r\n        ['девять','девяносто','девятьсот']];\r\n    let b=[['копейка','копейки','копеек'],\r\n        ['белорусский рубль',' белорусских рубля','белорусских рублей'],\r\n        ['тысяча','тысячи','тысяч'],\r\n        ['миллион','миллиона','миллионов'],\r\n        ['миллиард','миллиарда','миллиардов']\r\n    ];\r\n\r\n    function m999(n:number,b:Array<Array<string>>,f:number){\r\n        let s='';\r\n        let t=s1[Math.floor(n/100)%10][2];\r\n        if(t)s+=t+' ';\r\n\r\n        let d=Math.floor(n/10)%10;\r\n        t=s1[d][1];\r\n        if(t instanceof Array){\r\n            t=t[n%10];\r\n            if(t)s+=t+' ';\r\n        }else{\r\n            if(t)s+=t+' ';\r\n            t=s1[n%10][0];\r\n            if(t instanceof Array)t=t[f===0 || f===2?1:0];\r\n            if(t)s+=t;\r\n        }\r\n\r\n        return s+' '+plural(n,b[f])+(f>1?' ':'');\r\n    }\r\n\r\n    let i = Math.floor(n + 0.005),\r\n        f = Math.floor(((n - i) * 100) + 0.5),\r\n        s='';\r\n    for (let j=1; i > 0.9999; i/=1000) {\r\n        s=m999(Math.floor(i % 1000),b,j)+s;\r\n        j++;\r\n    }\r\n    if(f>0)s=s+' '+m999(f,b,0)\r\n    return s;\r\n}\r\n\r\n","import React from 'react';\r\nimport css from \"../print.module.css\";\r\n\r\ntype TypeFormToPrintAct = {\r\n    nameOfForm: string\r\n    docNumber: string | number\r\n    docDate: string | number\r\n    dateStr: string\r\n    vat: string\r\n    bankAccount: string\r\n    bankAccountOwn: string\r\n    nameFirm: string\r\n    nameFirmOwn: string\r\n    address: string\r\n    addressOwn: string\r\n    unp: string | number\r\n    unpOwn: string | number\r\n    totalOfString: string | null | 0\r\n    raw: Array<string | number | null>\r\n    endRaw: Array<string | number | null>\r\n    arrDiv: Array<any>\r\n}\r\n\r\nexport const FormToPrintAct = React.memo(({\r\n                                              nameOfForm, docNumber, docDate, raw, endRaw,\r\n                                              dateStr, nameFirm, nameFirmOwn, address, addressOwn,arrDiv, vat,\r\n                                              unp, unpOwn, bankAccount, bankAccountOwn, totalOfString\r\n                                          }: TypeFormToPrintAct) => {\r\n    console.log(\"render FormToPrintAct\")\r\n\r\n    return (\r\n        <div className={css.grid}>\r\n\r\n            {nameOfForm === 'act_form' && <div className={css.cell_1}>АКТ выполненных работ</div>}\r\n            {nameOfForm === 'invoice_form' && <div className={css.cell_1}>Счет-фактура</div>}\r\n            <div className={css.cell_3}>№{docNumber} от {docDate && dateStr}</div>\r\n            <div className={css.cell_5}>г.Минск</div>\r\n            <div\r\n                className={css.customer}> Заказчик: <span>{nameFirm}\r\n                <div>юр. адрес: {address}</div>\r\n                    <div>УНП: {unp}</div>\r\n                    <div> р/с: {bankAccount}</div>\r\n                    </span></div>\r\n           {arrDiv.map(t => t)}\r\n            <div className={css.cell}> Исполнитель: <span>{nameFirmOwn}\r\n                <div>юр. адрес: {addressOwn}</div>\r\n                    <div>УНП: {unpOwn}</div>\r\n                    <div> р/с: {bankAccountOwn}</div>\r\n                    </span>\r\n            </div>\r\n            {arrDiv.map(t => t)}\r\n            <div className={css.table}> Наименование услуги (работы)</div>\r\n            <div className={css.table_2}> Ед. изм.</div>\r\n            <div className={css.table_2}> Количество</div>\r\n            <div className={css.table_2}> Цена за ед, бел.руб</div>\r\n            <div className={css.table_2}> Стоимость без НДС, бел.руб</div>\r\n            <div className={css.table_2}> НДС, %</div>\r\n            <div className={css.table_2}> Стоимость с НДС, бел.руб</div>\r\n            <div className={css.table_5}> </div>\r\n            {raw.map((t, index) => {\r\n                return (\r\n                    <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>\r\n                )\r\n            })\r\n            }\r\n            {endRaw.map((t, index) => {\r\n                return (\r\n                    <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>\r\n                )\r\n            })\r\n            }\r\n            <div className={css.cell_4}>\r\n\r\n                <div className={css.total_of_string}>\r\n                    ИТОГО К ОПЛАТЕ: {totalOfString}, в т.ч. НДС: {vat}% - {// @ts-ignore\r\n                    endRaw[6] !== null && vat !== 'Без НДС' ? (endRaw[6] * (+vat) / (100 + +vat)).toFixed(2) : '0'} руб.\r\n                    {nameOfForm === 'act_form' &&  <div className={css.cell_7}> Настоящий акт составлен в том, что Исполнитель выполнил в срок и сдал\r\n                        Заказчику, указанные выше работы (услуги).\r\n                        <div>Заказчик и исполнитель друг к другу претензий не имеют.\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n                {nameOfForm === 'act_form' && <span>Заказчик ________________</span>}\r\n            </div>\r\n            {arrDiv.map(t => t)}\r\n            <div className={css.cell_6}>Исполнитель____________________\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\n","import React from 'react';\r\nimport css from \"./printTTN.module.css\";\r\nimport {chunkArray} from \"../../utils/chunkArray\";\r\nimport {numOfString} from \"../../utils/numOfStr\";\r\n\r\ntype TypeFormToPrintTTN = {\r\n\r\n    rawTTN:Array<string | number | null >\r\n    endRawTTN:Array<string | number | null >\r\n    docDate: string | number\r\n    dateStr: string\r\n    vat: string\r\n    bankAccount: string\r\n    bankAccountOwn: string\r\n    nameFirm: string\r\n    nameFirmOwn: string\r\n    address: string\r\n    addressOwn: string\r\n    unp: string | number\r\n    unpOwn: string | number\r\n    totalOfString: string | null | 0\r\n    raw: Array<string | number | null>\r\n    endRaw: Array<string | number | null>\r\n    arrDiv: Array<any>\r\n}\r\n\r\nexport const FormToPrintTTN = React.memo(({\r\n                                              docDate, raw, endRaw, rawTTN, endRawTTN,\r\n                                              dateStr, nameFirm, nameFirmOwn, address, addressOwn, arrDiv, vat,\r\n                                              unp, unpOwn, bankAccount, bankAccountOwn, totalOfString\r\n                                          }: TypeFormToPrintTTN) => {\r\n    console.log(\"render FormToPrintTTN\")\r\n\r\n\r\n    let newRawTTN = chunkArray(rawTTN, 11);\r\n    const totalVatString = endRawTTN[6] && numOfString(+endRawTTN[6]).toUpperCase()\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={css.unp_string}>\r\n                 <span className={css.unp_1}>\r\n                 {unp}\r\n                 </span>\r\n                <span className={css.unp_1}>\r\n                      {unpOwn}\r\n                    </span>\r\n                <span className={css.unp_2}> </span>\r\n\r\n\r\n            </div>\r\n            <div className={css.date}>{docDate && dateStr}</div>\r\n            <div className={css.auto}>\r\n                <span>Автомобиль</span>\r\n                <span>______________</span>\r\n                <span>Прицеп</span>\r\n                <span>_______________</span>\r\n                <span>К путевому листу</span>\r\n                <span>_______________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Владелец автомобиля</span>\r\n                <span>__________________________________________</span>\r\n                <span>Водитель</span>\r\n                <span>_______________________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Заказчик автомобильной перевозки</span>\r\n                <span>_______________________________________________________________________________________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Грузоотправитель</span>\r\n                <span>_{nameFirmOwn}________________________________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Грузополучатель</span>\r\n                <span>__{nameFirm}___________________________________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Основание отпуска</span>\r\n                <span>______________</span>\r\n                <span>Пункт погрузки</span>\r\n                <span>_______________</span>\r\n                <span>Пункт разгрузки</span>\r\n                <span>_______________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Переадресовка</span>\r\n                <span>______________________________________________________________________________________________________________</span>\r\n            </div>\r\n            <table>\r\n                <tr className={css.up}>\r\n                    <th>Наименование товара</th>\r\n                    <th>Еденица измерения</th>\r\n                    <th>Количество</th>\r\n                    <th>Цена, руб.</th>\r\n                    <th>Стоиомость, руб.</th>\r\n                    <th>НДС, %</th>\r\n                    <th>Сумма НДС, руб</th>\r\n                    <th>Стоимость с НДС, руб.</th>\r\n                    <th>Количество грузовых мест</th>\r\n                    <th>Масса груза</th>\r\n                    <th>Примечание</th>\r\n\r\n                </tr>\r\n                <tr className={css.up}>\r\n                    <td>1</td>\r\n                    <td>2</td>\r\n                    <td>3</td>\r\n                    <td>4</td>\r\n                    <td>5</td>\r\n                    <td>6</td>\r\n                    <td>7</td>\r\n                    <td>8</td>\r\n                    <td>9</td>\r\n                    <td>10</td>\r\n                    <td>11</td>\r\n\r\n                </tr>\r\n\r\n                {newRawTTN.map((ts)=>{\r\n                    return ( <tr> {ts.map((t, index) => {\r\n\r\n                    return (\r\n                            <td key={index} className={css.up} > {t} </td>\r\n                    )\r\n                })\r\n                }\r\n\r\n                </tr>)})}\r\n                <tr>\r\n                    {endRawTTN.map((t, index) => {\r\n                        return (\r\n                            <td key={index} className={css.up}> {t} </td>\r\n                        )\r\n                    })\r\n                    }\r\n                </tr>\r\n\r\n\r\n            </table>\r\n\r\n\r\n                     Всего стоимость с НДС: {totalOfString}\r\n            <div>\r\n                Всего сумма НДС: {totalVatString}\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Всего масса груза</span>\r\n                <span>__________________</span>\r\n                <span>Всего количество грузовых мест</span>\r\n                <span>__________________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Отпуск разрешил</span>\r\n                <span>__________________</span>\r\n                <span>Товар к перевозке принял</span>\r\n                <span>__________________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Сдал грузоотправитель</span>\r\n                <span>__________________</span>\r\n                <span>№ пломбы</span>\r\n                <span>__________________</span>\r\n                <span>По доверенности</span>\r\n                <span>__________________</span>\r\n                <span>выданной</span>\r\n                <span>__________________</span>\r\n            </div>\r\n            <div className={css.auto}>\r\n                <span>Принял грузополучатель</span>\r\n                <span>__________________</span>\r\n                <span>№ пломбы</span>\r\n                <span>__________________</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\n","\r\n\r\n\r\nexport function chunkArray(rawTTN:Array<string | number | null >, chunk_size:number){\r\n    let index = 0;\r\n    let arrayLength = rawTTN.length;\r\n    let tempArray = [];\r\n    for (index = 0; index < arrayLength; index += chunk_size) {\r\n        let myChunk = rawTTN.slice(index, index+chunk_size);\r\n\r\n        tempArray.push(myChunk);\r\n    }\r\n    return tempArray;\r\n}","import React, {MutableRefObject, useCallback, useEffect, useState} from \"react\";\r\nimport css from './print.module.css'\r\nimport {FormRequisitesFirm} from \"./Forms/FormRequisitesFirm\";\r\nimport {useInput, useInputNum} from \"../utils/useInput\";\r\nimport {FormRequisitesAct} from \"./Forms/FormRequisitesAct\";\r\nimport {numOfString} from \"../utils/numOfStr\";\r\nimport {FormToPrintAct} from \"./Forms/FormToPrintAct\";\r\nimport {FormToPrintTTN} from \"./Forms/FormToPrintTTN\";\r\n\r\ntype TypeComponentToPrintProps = {\r\n    ref: MutableRefObject<any>\r\n    val: string;\r\n}\r\n\r\nexport const ComponentToPrint = React.forwardRef((props: TypeComponentToPrintProps, ref: any) => {\r\n\r\n    let initialRaw: Array<string | number | null> = []\r\n    const [raw, setRaw] = useState<Array<string | number | null>>(initialRaw)\r\n    const [rawTTN, setRawTTN] = useState<Array<string | number | null>>(initialRaw)\r\n    const [endRaw, setEndRaw] = useState<Array<string | number | null>>([])\r\n    const [endRawTTN, setEndRawTTN] = useState<Array<string | number | null>>([])\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [error, setError] = useState<boolean>(false)\r\n    const docNumber = useInput('')\r\n    const docDate = useInput('')\r\n    const service = useInput('')\r\n    const unit = useInput('')\r\n    // @ts-ignore\r\n    const nameFirm = useInput(localStorage.getItem('nameFirm'))\r\n    // @ts-ignore\r\n    const nameFirmOwn = useInput(localStorage.getItem('nameFirmOwn'))\r\n    // @ts-ignore\r\n    const address = useInput(localStorage.getItem('address'))\r\n    // @ts-ignore\r\n    const addressOwn = useInput(localStorage.getItem('addressOwn'))\r\n    // @ts-ignore\r\n    const bankAccount = useInput(localStorage.getItem('bankAccount'))\r\n    // @ts-ignore\r\n    const bankAccountOwn = useInput(localStorage.getItem('bankAccountOwn'))\r\n    const price = useInputNum('')\r\n    const quantity = useInputNum('')\r\n    // @ts-ignore\r\n    const unp = useInputNum(localStorage.getItem('unp'))\r\n    // @ts-ignore\r\n    const unpOwn = useInputNum(localStorage.getItem('unpOwn'))\r\n    const vat = useInput('')\r\n\r\n    let cost = +(+quantity.value * +price.value).toFixed(2)\r\n\r\n    let costVat = vat.value === \"Без НДС\"\r\n        ? 0\r\n        : +(cost * +vat.value / 100).toFixed(2)\r\n\r\n\r\n    useEffect(() => {\r\n        setEndRaw(['', '', '', '', '', 'Итого:', total < 0 ? 0 : +total.toFixed(2), null])\r\n        setEndRawTTN(['Итого:', '', '', '', ((total < 0 ? 0 : +total) / 1.2).toFixed(2),\r\n            '', ((total < 0 ? 0 : +total) / 6).toFixed(2), total < 0 ? 0 : +total.toFixed(2), null, null, null])\r\n    }, [raw, total])\r\n\r\n    const addStrInTable = () => {\r\n        setError(true)\r\n        if (service.value !== '' && price.value !== '' && quantity.value !== '') {\r\n            let copyRaw = [...raw]\r\n            setRaw([...copyRaw, service.value, unit.value,\r\n                quantity.value, price.value, cost, vat.value, +(+costVat + +cost).toFixed(2), null])\r\n\r\n            setRawTTN([...rawTTN, service.value, unit.value, quantity.value,\r\n                price.value, cost, vat.value, costVat, +(+costVat + +cost).toFixed(2), null, null, null])\r\n            setTotal(t => +t.toFixed(2) + +costVat.toFixed(2) + +cost.toFixed(2))\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const clearButton = useCallback(() => {\r\n        unit.reset('')\r\n        price.reset('')\r\n        quantity.reset('')\r\n        service.reset('')\r\n        vat.reset('')\r\n        setError(false)\r\n    }, [unit.value, price.value, quantity.value, service.value])\r\n\r\n    const deleteRaw = () => {\r\n        if (raw.length >= 8) {\r\n            setRaw([...raw].filter((t, i) => i < raw.length - 8))\r\n            setRawTTN([...rawTTN].filter((t, i) => i < rawTTN.length - 11))\r\n            let array = raw.filter((t, i) => i >= raw.length - 8)\r\n            // @ts-ignore\r\n            setTotal(t => +t.toFixed(2) - array[6])\r\n        }\r\n    }\r\n\r\n    let arrDiv: Array<any> = new Array(7).fill('1').map((t, i) => <div key={i} className={css.cell}></div>)\r\n\r\n    let date = docDate.value.toString()\r\n    let dateStr = `${date[8]}${date[9]}.${date[5]}${date[6]}.${date[0]}${date[1]}${date[2]}${date[3]}`\r\n\r\n    let totalOfString = endRaw[6] && numOfString(+endRaw[6]).toUpperCase()\r\n    return (<div>\r\n\r\n            <div className={css.button_block}>\r\n                <FormRequisitesFirm bankAccount={bankAccount.value}\r\n                                    changeBankAccount={useCallback((e) => bankAccount.onChange(e), [bankAccount.value])}\r\n                                    nameFirm={nameFirm.value}\r\n                                    address={address.value}\r\n                                    changeAddress={useCallback((e) => address.onChange(e), [address.value])}\r\n                                    changeUnp={useCallback((e) => unp.onChange(e), [unp.value])}\r\n                                    changeNameFirm={useCallback((e) => nameFirm.onChange(e), [nameFirm.value])}\r\n                                    unp={unp.value}\r\n                                    val={'customer'}\r\n                />\r\n\r\n                <FormRequisitesFirm bankAccount={bankAccountOwn.value}\r\n                                    changeBankAccount={useCallback((e) =>\r\n                                        bankAccountOwn.onChange(e), [bankAccountOwn.value])}\r\n                                    nameFirm={nameFirmOwn.value}\r\n                                    address={addressOwn.value}\r\n                                    changeAddress={useCallback((e) =>\r\n                                        addressOwn.onChange(e), [addressOwn.value])}\r\n                                    changeUnp={useCallback((e) =>\r\n                                        unpOwn.onChange(e), [unpOwn.value])}\r\n                                    changeNameFirm={useCallback((e) =>\r\n                                        nameFirmOwn.onChange(e), [nameFirmOwn.value])}\r\n                                    unp={unpOwn.value}\r\n                                    val={'executor'}\r\n                />\r\n                <div className={css.form_req}>\r\n                    <FormRequisitesAct docNumber={docNumber.value}\r\n                                       changeDocNumber={useCallback((e) => docNumber.onChange(e), [docNumber.value])}\r\n                                       changeService={useCallback((e) => service.onChange(e), [service.value])}\r\n                                       changeUnit={useCallback((e) => unit.onChange(e), [unit.value])}\r\n                                       changeQuantity={useCallback((e) => quantity.onChange(e), [quantity.value])}\r\n                                       changePrice={useCallback((e) => price.onChange(e), [price.value])}\r\n                                       changeVat={useCallback((e) => vat.onChange(e), [vat.value])}\r\n                                       changeDocDate={useCallback((e) => docDate.onChange(e), [docDate.value])}\r\n                                       clearButton={clearButton}\r\n                                       service={service.value}\r\n                                       docDate={docDate.value}\r\n                                       vat={vat.value}\r\n                                       price={price.value}\r\n                                       quantity={quantity.value}\r\n                                       unit={unit.value}\r\n\r\n                    />\r\n\r\n                    <div>\r\n                        <button className={css.button} onClick={addStrInTable}> Добавить в таблицу</button>\r\n                        <button className={css.button} onClick={deleteRaw}> Удалить строку из таблицы</button>\r\n                    </div>\r\n                    {error && <p style={{color: 'red'}}>\"Поля выделенные красным обязательны для заполнения!!!\"</p>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <style type=\"text/css\"\r\n                   media=\"print\">{'@media print { body { -webkit-print-color-adjust: exact; } ' +\r\n            '@page { size: A4; margin-left: 15mm !important }}'}</style>\r\n            <div ref={ref}>\r\n                {props.val !== 'ttn_form' && <FormToPrintAct\r\n                    nameOfForm={props.val} docNumber={docNumber.value}\r\n                    docDate={docDate.value} dateStr={dateStr}\r\n                    raw={raw} vat={vat.value} endRaw={endRaw}\r\n                    arrDiv={arrDiv} totalOfString={totalOfString}\r\n                    address={address.value} addressOwn={addressOwn.value}\r\n                    bankAccount={bankAccount.value} bankAccountOwn={bankAccountOwn.value}\r\n                    nameFirm={nameFirm.value} nameFirmOwn={nameFirmOwn.value}\r\n                    unp={unp.value} unpOwn={unpOwn.value}\r\n                />}\r\n                {props.val === 'ttn_form' && <FormToPrintTTN\r\n                    rawTTN={rawTTN} endRawTTN={endRawTTN}\r\n                    docDate={docDate.value} dateStr={dateStr}\r\n                    raw={raw} vat={vat.value} endRaw={endRaw}\r\n                    arrDiv={arrDiv} totalOfString={totalOfString}\r\n                    address={address.value} addressOwn={addressOwn.value}\r\n                    bankAccount={bankAccount.value} bankAccountOwn={bankAccountOwn.value}\r\n                    nameFirm={nameFirm.value} nameFirmOwn={nameFirmOwn.value}\r\n                    unp={unp.value} unpOwn={unpOwn.value}\r\n                />}\r\n            </div>\r\n        </div>\r\n    );\r\n});","import React, {useRef} from 'react';\r\nimport {useReactToPrint} from 'react-to-print';\r\nimport {ComponentToPrint} from './Print';\r\nimport css from './form.module.css'\r\n\r\ntype TypeFormProps = {\r\n    form: string\r\n}\r\n\r\nexport const Form = ({form}: TypeFormProps) => {\r\n    const componentRef = useRef(null);\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    return (\r\n        <div className={css.form}>\r\n            <button className={css.button}\r\n                    onClick={handlePrint}>Распечатать или сохранить в файл\r\n            </button>\r\n            <div>\r\n                {form === 'act_form' && <ComponentToPrint ref={componentRef} val={'act_form'}/>}\r\n                {form === 'invoice_form' && <ComponentToPrint ref={componentRef} val={'invoice_form'}/>}\r\n                {form === 'ttn_form' && <ComponentToPrint ref={componentRef} val={'ttn_form'}/>}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport homeimage from '../home.jpeg'\r\n\r\n\r\n\r\nfunction FormToPrintTN () {\r\n    return (\r\n        <div>\r\n\r\n\r\n            <img src={homeimage}/>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default FormToPrintTN;\r\n","import React from 'react';\nimport {Route, Routes} from 'react-router-dom';\nimport './App.css';\nimport Home from \"./components/home\";\nimport Navbar from \"./components/navbar\";\nimport {Form} from \"./components/Form\";\nimport FormToPrintTN from \"./components/Forms/FormToPrintTN\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <Routes>\n                <Route path=\"home\" element={<Home />} />\n                <Route path=\"act_form\" element={<Form form={'act_form'} />}/>\n                <Route path=\"invoice_form\" element={<Form form={'invoice_form'} />}/>\n                <Route path=\"ttn_form\" element={<Form form={'ttn_form'} />}/>\n                <Route path=\"tn_form\" element={<FormToPrintTN/>}/>\n                <Route path=\"/contract\" element={<FormToPrintTN/>}/>\n            </Routes>\n\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n    <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}