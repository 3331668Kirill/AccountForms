{"version":3,"sources":["print.module.css","components/navbar.module.css","printTTN.module.css","components/form.module.css","components/home.tsx","components/navbar.tsx","Modal.tsx","components/Forms/FormRequisitesFirm.tsx","utils/useInput.ts","components/Forms/FormRequisitesAct.tsx","components/Forms/FormToPrintAct.tsx","components/Forms/FormToPrintTTN.tsx","utils/chunkArray.ts","Print.tsx","utils/numOfStr.ts","components/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Home","className","Navbar","s","nav_div","nav","item","to","active","Modal","setActive","children","onClick","e","stopPropagation","FormRequisitesFirm","React","memo","unp","changeUnp","changeNameFirm","changeAddress","changeBankAccount","nameFirm","bankAccount","address","val","useState","modalActive","setModalActive","console","log","style","margin","padding","fontSize","backgroundColor","type","id","value","onChange","maxLength","width","useInput","initialValue","setValue","currentTarget","localStorage","setItem","reset","useInputNum","ev","isFinite","FormRequisitesAct","docNumber","changeDocNumber","service","vat","changeVat","docDate","changeQuantity","quantity","changePrice","price","changeService","unit","changeUnit","changeDocDate","clearButton","css","list","FormToPrintAct","nameOfForm","raw","endRaw","dateStr","nameFirmOwn","addressOwn","arrDiv","unpOwn","bankAccountOwn","totalOfString","grid","cell_1","cell_3","cell_5","customer","map","t","cell","table","table_2","table_5","index","table_4","cell_4","total_of_string","toFixed","cell_7","cell_6","FormToPrintTTN","rawTTN","newRawTTN","chunk_size","arrayLength","length","tempArray","myChunk","slice","push","chunkArray","unp_string","unp_1","unp_2","date","auto","up","ts","ComponentToPrint","forwardRef","props","ref","initialRaw","setRaw","setRawTTN","setEndRaw","total","setTotal","error","setError","getItem","cost","costVat","useEffect","useCallback","Array","fill","i","toString","n","s1","b","m999","f","Math","floor","d","forms","plural","j","numOfString","toUpperCase","copyRaw","filter","array","color","media","Form","form","componentRef","useRef","handlePrint","useReactToPrint","content","current","height","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc4286e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"print_grid__1MsHo\",\"cell_1\":\"print_cell_1__19slu\",\"customer\":\"print_customer__8_EfK\",\"cell_2\":\"print_cell_2__1sUf-\",\"cell_3\":\"print_cell_3__2AEs2\",\"cell_4\":\"print_cell_4__3tbOH\",\"cell_6\":\"print_cell_6__1HVAl\",\"cell_7\":\"print_cell_7__3JVBE\",\"total_of_string\":\"print_total_of_string__n10Yh\",\"cell_5\":\"print_cell_5__2tydo\",\"table\":\"print_table__1XRJ7\",\"table_2\":\"print_table_2__1Nfoc\",\"table_3\":\"print_table_3__3tKi8\",\"table_4\":\"print_table_4__2a6f3\",\"table_5\":\"print_table_5__1u907\",\"service\":\"print_service__TlFkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__1qu4T\",\"nav_div\":\"navbar_nav_div__3moL5\",\"item\":\"navbar_item__3hqwi\",\"active\":\"navbar_active__edz2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"up\":\"printTTN_up__174m2\",\"unp_string\":\"printTTN_unp_string__2LYfZ\",\"unp_1\":\"printTTN_unp_1__1G25A\",\"unp_2\":\"printTTN_unp_2__3asFb\",\"date\":\"printTTN_date__2thP0\",\"auto\":\"printTTN_auto__2nLTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__QVyAX\"};","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nfunction Home () {\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            ГЛАВНАЯ\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport s from './navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.nav_div}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/home' >Главная</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/act_form' >Акт выполненных работ</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/ttn_form' >ТТН</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to='/tn' >ТН</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/invoice_form' >Счет-фактура</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/contract' >Договор</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {Dispatch} from \"react\";\r\nimport \"./modal.css\"\r\n\r\ntype ModalPropsType = {\r\n    active:boolean\r\n    setActive:Dispatch<boolean>\r\n    children:React.ReactChild | React.ReactNode\r\n}\r\n\r\n\r\nexport const Modal = ({active, setActive, children}:ModalPropsType) =>{\r\n\r\n    return (\r\n        <div className={active?'modal active':'modal'} onClick={()=>setActive(false)}>\r\n        <div className={active?'modal_content active':'modal_content'} onClick={(e)=>e.stopPropagation()}>\r\n            {children}\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Modal} from \"../../Modal\";\r\n\r\ninterface TypePropsFormRequisitesFirm {\r\n    unp: string | number\r\n    changeUnp: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeNameFirm: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeAddress: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeBankAccount: (e: ChangeEvent<HTMLInputElement>) => void\r\n    bankAccount: string\r\n    nameFirm: string\r\n    address: string\r\n    val: string\r\n}\r\n\r\nexport const FormRequisitesFirm = React.memo(({\r\n                                                  unp,\r\n                                                  changeUnp,\r\n                                                  changeNameFirm,\r\n                                                  changeAddress,\r\n                                                  changeBankAccount,\r\n                                                  nameFirm,\r\n                                                  bankAccount,\r\n                                                  address,\r\n                                                  val,\r\n                                              }: TypePropsFormRequisitesFirm) => {\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    console.log(\"render Form\")\r\n    return (<div>\r\n        {val === 'customer' &&\r\n        <button style={{margin: \"10px 20px\", padding: \"20px\", fontSize: \"1rem\", backgroundColor: 'lightgreen'}}\r\n                onClick={() => setModalActive(true)}\r\n        > РЕКВИЗИТЫ ЗАКАЗЧИКА\r\n        </button>}\r\n        {val === 'executor' && <div>\r\n            <button style={{margin: \"10px 20px\", padding: \"20px\", fontSize: \"1rem\", backgroundColor: 'lightgreen'}}\r\n                    onClick={() => setModalActive(true)}\r\n            > РЕКВИЗИТЫ ИСПОЛНИТЕЛЯ\r\n            </button>\r\n        </div>}\r\n        <Modal active={modalActive} setActive={setModalActive}>\r\n            <label>введите УНП: </label>\r\n            <input type={\"text\"} id={val === 'customer' ? 'unp' : 'unpOwn'} value={unp} onChange={changeUnp}\r\n                   maxLength={9}/>\r\n            <div>\r\n                <label>введите наименование организации: </label>\r\n                <input type={\"text\"} id={val === 'customer' ?'nameFirm': 'nameFirmOwn'} value={nameFirm} onChange={changeNameFirm} maxLength={30}/>\r\n            </div>\r\n            <div>\r\n                <label>введите адрес организации: </label>\r\n                <input type={\"text\"} id={val === 'customer' ?'address':'addressOwn'} style={{width: '250px'}}\r\n                       value={address} onChange={changeAddress} maxLength={40}/>\r\n            </div>\r\n            <div>\r\n                <label>введите расчетный счет организации: </label>\r\n                <input type={\"text\"} id={val === 'customer' ? 'bankAccount' : 'bankAccountOwn'} style={{width: '250px'}}\r\n                       value={bankAccount} onChange={changeBankAccount} maxLength={28}/>\r\n            </div>\r\n        </Modal>\r\n    </div>)\r\n})","import {ChangeEvent, useState} from \"react\";\r\n\r\n\r\nexport function useInput(initialValue:string){\r\n    const [value,setValue] = useState(initialValue)\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        setValue(e.currentTarget.value)\r\n        localStorage.setItem(e.currentTarget.id, e.currentTarget.value)\r\n    }\r\n    const reset = (e:string) => {\r\n      setValue(e)\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange,\r\n        reset\r\n    }\r\n}\r\n\r\nexport function useInputNum(initialValue:string|number){\r\n    const [value,setValue] = useState(initialValue)\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        localStorage.setItem(e.currentTarget.id, e.currentTarget.value)\r\n        let ev = e.currentTarget.value\r\n        if (isFinite(+ev)) return setValue(ev)\r\n        return null\r\n    }\r\n    const reset = (e:string) => {\r\n        setValue(e)\r\n    }\r\n    return {\r\n        value,\r\n        onChange,\r\n        reset\r\n    }\r\n}","import css from \"../../print.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ninterface TypePropsFormRequisitesAct {\r\n    docNumber: string | number\r\n    docDate: string | number\r\n    service: string | number\r\n    quantity: string | number\r\n    unit: string | number\r\n    price: string | number\r\n    vat: string | number\r\n    changeDocNumber: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeDocDate: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeUnit: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeService: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeQuantity: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePrice: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeVat: (e: ChangeEvent<HTMLInputElement>) => void\r\n    clearButton: () => void\r\n}\r\n\r\nexport const FormRequisitesAct = React.memo(({\r\n                                                 docNumber, changeDocNumber, service, vat, changeVat, docDate,\r\n                                                 changeQuantity, quantity, changePrice, price,\r\n                                                 changeService, unit, changeUnit, changeDocDate, clearButton,\r\n                                             }: TypePropsFormRequisitesAct) => {\r\n\r\n    console.log(\"render Act\")\r\n    return (<div>\r\n            <div>\r\n                <div>\r\n                    <label>введите дату документа: </label>\r\n                    <input type={\"date\"} id={'docDate'}\r\n                           value={docDate}\r\n                           onChange={changeDocDate}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>введите номер документа: </label>\r\n                    <input type={\"text\"} id={'docNumber'}\r\n                           value={docNumber}\r\n                           onChange={changeDocNumber}\r\n                           maxLength={9}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите наименование услуги: </label>\r\n                    <input type={\"text\"} className={service === '' ? css.service : ''}\r\n                           id={'service'} value={service} onChange={changeService}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите ед изм: </label>\r\n                    <input type={\"text\"} id={'unit'} value={unit} onChange={changeUnit} maxLength={3}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите кол-во: </label>\r\n                    <input type={\"text\"} id={'quantity'} className={quantity === '' ? css.service : ''}\r\n                           value={quantity} onChange={changeQuantity}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите цену: </label>\r\n                    <input type={\"text\"} id={'price'} className={price === '' ? css.service : ''}\r\n                           value={price} onChange={changePrice}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите НДС %: </label>\r\n                    <input list={\"vat-list\"} id={'vat'} value={vat} onChange={changeVat}/>\r\n                </div>\r\n                <datalist id=\"vat-list\">\r\n                    <option value=\"20\"/>\r\n                    <option value=\"10\"/>\r\n                    <option value=\"0\"/>\r\n                    <option value=\"Без НДС\"/>\r\n\r\n                </datalist>\r\n\r\n\r\n                <button onClick={clearButton}> Очистить поля ввода</button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n})","import React from 'react';\r\nimport css from \"../../print.module.css\";\r\n\r\ntype TypeFormToPrintAct = {\r\n    nameOfForm: string\r\n    docNumber: string | number\r\n    docDate: string | number\r\n    dateStr: string\r\n    vat: string\r\n    bankAccount: string\r\n    bankAccountOwn: string\r\n    nameFirm: string\r\n    nameFirmOwn: string\r\n    address: string\r\n    addressOwn: string\r\n    unp: string | number\r\n    unpOwn: string | number\r\n    totalOfString: string\r\n    raw: Array<string | number | null>\r\n    endRaw: Array<string | number | null>\r\n    arrDiv: Array<any>\r\n}\r\n\r\nexport const FormToPrintAct = React.memo(({\r\n                                              nameOfForm, docNumber, docDate, raw, endRaw,\r\n                                              dateStr, nameFirm, nameFirmOwn, address, addressOwn,arrDiv, vat,\r\n                                              unp, unpOwn, bankAccount, bankAccountOwn, totalOfString\r\n                                          }: TypeFormToPrintAct) => {\r\n    console.log(\"render FormToPrintAct\")\r\n\r\n    return (\r\n        <div className={css.grid}>\r\n\r\n            {nameOfForm === 'act_form' && <div className={css.cell_1}>АКТ выполненных работ</div>}\r\n            {nameOfForm === 'invoice_form' && <div className={css.cell_1}>Счет-фактура</div>}\r\n            <div className={css.cell_3}>№{docNumber} от {docDate && dateStr}</div>\r\n            <div className={css.cell_5}>г.Минск</div>\r\n            <div\r\n                className={css.customer}> Заказчик: <span>{nameFirm}\r\n                <div>юр. адрес: {address}</div>\r\n                    <div>УНП: {unp}</div>\r\n                    <div> р/с: {bankAccount}</div>\r\n                    </span></div>\r\n           {arrDiv.map(t => t)}\r\n            <div className={css.cell}> Исполнитель: <span>{nameFirmOwn}\r\n                <div>юр. адрес: {addressOwn}</div>\r\n                    <div>УНП: {unpOwn}</div>\r\n                    <div> р/с: {bankAccountOwn}</div>\r\n                    </span>\r\n            </div>\r\n            {arrDiv.map(t => t)}\r\n            <div className={css.table}> Наименование услуги (работы)</div>\r\n            <div className={css.table_2}> Ед. изм.</div>\r\n            <div className={css.table_2}> Количество</div>\r\n            <div className={css.table_2}> Цена за ед, бел.руб</div>\r\n            <div className={css.table_2}> Стоимость без НДС, бел.руб</div>\r\n            <div className={css.table_2}> НДС, %</div>\r\n            <div className={css.table_2}> Стоимость с НДС, бел.руб</div>\r\n            <div className={css.table_5}> </div>\r\n            {raw.map((t, index) => {\r\n                return (\r\n                    <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>\r\n                )\r\n            })\r\n            }\r\n            {endRaw.map((t, index) => {\r\n                return (\r\n                    <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>\r\n                )\r\n            })\r\n            }\r\n            <div className={css.cell_4}>\r\n\r\n                <div className={css.total_of_string}>\r\n                    ИТОГО К ОПЛАТЕ: {totalOfString}, в т.ч. НДС: {vat}% - {// @ts-ignore\r\n                    endRaw[6] !== null && vat !== 'Без НДС' ? (endRaw[6] * (+vat) / (100 + +vat)).toFixed(2) : '0'} руб.\r\n                    {nameOfForm === 'act_form' &&  <div className={css.cell_7}> Настоящий акт составлен в том, что Исполнитель выполнил в срок и сдал\r\n                        Заказчику, указанные выше работы (услуги).\r\n                        <div>Заказчик и исполнитель друг к другу претензий не имеют.\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n                {nameOfForm === 'act_form' && <span>Заказчик ________________</span>}\r\n            </div>\r\n            {arrDiv.map(t => t)}\r\n            <div className={css.cell_6}>Исполнитель____________________\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\n","import React from 'react';\r\nimport css from \"../../printTTN.module.css\";\r\nimport {chunkArray} from \"../../utils/chunkArray\";\r\n\r\ntype TypeFormToPrintTTN = {\r\n\r\n    rawTTN:Array<string | number | null >\r\n    docDate: string | number\r\n    dateStr: string\r\n    vat: string\r\n    bankAccount: string\r\n    bankAccountOwn: string\r\n    nameFirm: string\r\n    nameFirmOwn: string\r\n    address: string\r\n    addressOwn: string\r\n    unp: string | number\r\n    unpOwn: string | number\r\n    totalOfString: string\r\n    raw: Array<string | number | null>\r\n    endRaw: Array<string | number | null>\r\n    arrDiv: Array<any>\r\n}\r\n\r\nexport const FormToPrintTTN = React.memo(({\r\n                                              docDate, raw, endRaw, rawTTN,\r\n                                              dateStr, nameFirm, nameFirmOwn, address, addressOwn, arrDiv, vat,\r\n                                              unp, unpOwn, bankAccount, bankAccountOwn, totalOfString\r\n                                          }: TypeFormToPrintTTN) => {\r\n    console.log(\"render FormToPrintTTN\")\r\n\r\n\r\n    let newRawTTN = chunkArray(rawTTN, 11);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={css.unp_string}>\r\n                 <span className={css.unp_1}>\r\n                 {unp}\r\n                 </span>\r\n                <span className={css.unp_1}>\r\n                      {unpOwn}\r\n                    </span>\r\n                <span className={css.unp_2}> </span>\r\n\r\n\r\n            </div>\r\n            <div className={css.date}>{docDate && dateStr}</div>\r\n            <div className={css.auto}>\r\n                <span>Автомобиль</span>\r\n                <span>______________</span>\r\n                <span>Прицеп</span>\r\n                <span>_______________</span>\r\n                <span>К путевому листу</span>\r\n                <span>_______________</span>\r\n            </div>\r\n\r\n\r\n            <table>\r\n                <tr className={css.up}>\r\n                    <th>Наименование товара</th>\r\n                    <th>Еденица измерения</th>\r\n                    <th>Количество</th>\r\n                    <th>Цена, руб.</th>\r\n                    <th>Стоиомость, руб.</th>\r\n                    <th>НДС, %</th>\r\n                    <th>Сумма НДС, руб</th>\r\n                    <th>Стоимость с НДС, руб.</th>\r\n                    <th>Количество грузовых мест</th>\r\n                    <th>Масса груза</th>\r\n                    <th>Примечание</th>\r\n\r\n                </tr>\r\n                <tr className={css.up}>\r\n                    <td>1</td>\r\n                    <td>2</td>\r\n                    <td>3</td>\r\n                    <td>4</td>\r\n                    <td>5</td>\r\n                    <td>6</td>\r\n                    <td>7</td>\r\n                    <td>8</td>\r\n                    <td>9</td>\r\n                    <td>10</td>\r\n                    <td>11</td>\r\n\r\n                </tr>\r\n\r\n                {newRawTTN.map((ts)=>{\r\n                    return ( <tr> {ts.map((t, index) => {\r\n\r\n                    return (\r\n                            <td key={index} > {t} </td>\r\n                    )\r\n                })\r\n                }\r\n\r\n                </tr>)})}\r\n                <tr>\r\n                    {endRaw.map((t, index) => {\r\n                        return (\r\n                            <td key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </td>\r\n                        )\r\n                    })\r\n                    }\r\n                </tr>\r\n\r\n\r\n            </table>\r\n\r\n\r\n            {/* <div className={css.cell}> 1111 </div>*/}\r\n            {/* <div className={css.cell}> 2222 </div>*/}\r\n            {/* <div>{unp}</div>*/}\r\n            {/* <div>{unpOwn}</div>*/}\r\n            {/* <div>   </div>*/}\r\n            {/* <div className={css.cell}>{docDate && dateStr}</div>*/}\r\n            {/* <div className={css.cell}> </div>*/}\r\n            {/* <div*/}\r\n            {/*     className={css.customer}> Заказчик: <span>{nameFirm}*/}\r\n            {/*     <div>юр. адрес: {address}</div>*/}\r\n\r\n            {/*         <div> р/с: {bankAccount}</div>*/}\r\n            {/*         </span></div>*/}\r\n            {/*{arrDiv.map(t => t)}*/}\r\n            {/* <div className={css.cell}> Исполнитель: <span>{nameFirmOwn}*/}\r\n            {/*     <div>юр. адрес: {addressOwn}</div>*/}\r\n\r\n            {/*         <div> р/с: {bankAccountOwn}</div>*/}\r\n            {/*         </span>*/}\r\n            {/* </div>*/}\r\n            {/* {arrDiv.map(t => t)}*/}\r\n            {/* <div className={css.table}> Наименование услуги (работы)</div>*/}\r\n            {/* <div className={css.table_2}> Ед. изм.</div>*/}\r\n            {/* <div className={css.table_2}> Количество</div>*/}\r\n            {/* <div className={css.table_2}> Цена за ед, бел.руб</div>*/}\r\n            {/* <div className={css.table_2}> Стоимость без НДС, бел.руб</div>*/}\r\n            {/* <div className={css.table_2}> НДС, %</div>*/}\r\n            {/* <div className={css.table_2}> Стоимость с НДС, бел.руб</div>*/}\r\n            {/* <div className={css.table_5}> </div>*/}\r\n            {/* {raw.map((t, index) => {*/}\r\n            {/*     return (*/}\r\n            {/*         <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>*/}\r\n            {/*     )*/}\r\n            {/* })*/}\r\n            {/* }*/}\r\n            {/* {endRaw.map((t, index) => {*/}\r\n            {/*     return (*/}\r\n            {/*         <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>*/}\r\n            {/*     )*/}\r\n            {/* })*/}\r\n            {/* }*/}\r\n            {/* <div className={css.cell_4}>*/}\r\n\r\n            {/*     <div className={css.total_of_string}>*/}\r\n            {/*         ИТОГО К ОПЛАТЕ: {totalOfString}, в т.ч. НДС: {vat}% - {// @ts-ignore*/}\r\n            {/*         endRaw[6] !== null && vat !== 'Без НДС' ? (endRaw[6] * (+vat) / (100 + +vat)).toFixed(2) : '0'} руб.*/}\r\n            {/*         {nameOfForm === 'act_form' &&  <div className={css.cell_7}> Настоящий акт составлен в том, что Исполнитель выполнил в срок и сдал*/}\r\n            {/*             Заказчику, указанные выше работы (услуги).*/}\r\n            {/*             <div>Заказчик и исполнитель друг к другу претензий не имеют.*/}\r\n            {/*             </div>*/}\r\n            {/*         </div>}*/}\r\n            {/*     </div>*/}\r\n            {/*     {nameOfForm === 'act_form' && <span>Заказчик ________________</span>}*/}\r\n            {/* </div>*/}\r\n            {/* {arrDiv.map(t => t)}*/}\r\n            {/* <div className={css.cell_6}>Исполнитель____________________*/}\r\n            {/* </div>*/}\r\n\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\n","\r\n\r\n\r\nexport function chunkArray(rawTTN:Array<string | number | null >, chunk_size:number){\r\n    let index = 0;\r\n    let arrayLength = rawTTN.length;\r\n    let tempArray = [];\r\n    for (index = 0; index < arrayLength; index += chunk_size) {\r\n        let myChunk = rawTTN.slice(index, index+chunk_size);\r\n\r\n        tempArray.push(myChunk);\r\n    }\r\n    return tempArray;\r\n}","import React, {MutableRefObject, useCallback, useEffect, useState} from \"react\";\r\nimport css from './print.module.css'\r\nimport {FormRequisitesFirm} from \"./components/Forms/FormRequisitesFirm\";\r\nimport {useInput, useInputNum} from \"./utils/useInput\";\r\nimport {FormRequisitesAct} from \"./components/Forms/FormRequisitesAct\";\r\nimport {numOfString} from \"./utils/numOfStr\";\r\nimport {FormToPrintAct} from \"./components/Forms/FormToPrintAct\";\r\nimport {FormToPrintTTN} from \"./components/Forms/FormToPrintTTN\";\r\n\r\ntype TypeComponentToPrintProps = {\r\n    ref: MutableRefObject<any>\r\n    val: string;\r\n}\r\n\r\nexport const ComponentToPrint = React.forwardRef((props:TypeComponentToPrintProps, ref:any) => {\r\n\r\n    let initialRaw: Array<string | number | null> = []\r\n    const [raw, setRaw] = useState<Array<string | number | null>>(initialRaw)\r\n    const [rawTTN, setRawTTN] = useState<Array<string | number | null >>(initialRaw)\r\n    const [endRaw, setEndRaw] = useState<Array<string | number | null>>([])\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [error, setError] = useState<boolean>(false)\r\n    const docNumber = useInput('')\r\n    const docDate = useInput('')\r\n    const service = useInput('')\r\n    const unit = useInput('')\r\n    // @ts-ignore\r\n    const nameFirm = useInput(localStorage.getItem('nameFirm'))\r\n    // @ts-ignore\r\n    const nameFirmOwn = useInput(localStorage.getItem('nameFirmOwn'))\r\n    // @ts-ignore\r\n    const address = useInput(localStorage.getItem('address'))\r\n    // @ts-ignore\r\n    const addressOwn = useInput(localStorage.getItem('addressOwn'))\r\n    // @ts-ignore\r\n    const bankAccount = useInput(localStorage.getItem('bankAccount'))\r\n    // @ts-ignore\r\n    const bankAccountOwn = useInput(localStorage.getItem('bankAccountOwn'))\r\n    const price = useInputNum('')\r\n    const quantity = useInputNum('')\r\n    // @ts-ignore\r\n    const unp = useInputNum(localStorage.getItem('unp'))\r\n    // @ts-ignore\r\n    const unpOwn = useInputNum(localStorage.getItem('unpOwn'))\r\n\r\n    const vat = useInput('')\r\n\r\n    let cost = +(+quantity.value * +price.value).toFixed(2)\r\n\r\n    let costVat = vat.value === \"Без НДС\"\r\n        ? 0\r\n        : +(cost * +vat.value / 100).toFixed(2)\r\n\r\n\r\n    useEffect(() => {\r\n        setEndRaw(['', '', '', '', '', 'Итого:', total < 0 ? 0 : +total.toFixed(2), null])\r\n    }, [raw, total])\r\n\r\n    const addStrInTable = () => {\r\n        setError(true)\r\n        if (service.value !== '' && price.value !== '' && quantity.value !== '') {\r\n            let copyRaw = [...raw]\r\n            setRaw([...copyRaw, service.value, unit.value,\r\n                quantity.value, price.value, cost, vat.value, +(+costVat + +cost).toFixed(2), null])\r\n\r\n            setRawTTN([...rawTTN, service.value, unit.value, quantity.value,\r\n                price.value, cost, vat.value, costVat , +(+costVat + +cost).toFixed(2), null,null,null])\r\n            setTotal(t => +t.toFixed(2) + +costVat.toFixed(2) + +cost.toFixed(2))\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const clearButton = useCallback(() => {\r\n        unit.reset('')\r\n        price.reset('')\r\n        quantity.reset('')\r\n        service.reset('')\r\n        vat.reset('')\r\n        setError(false)\r\n    }, [unit.value, price.value, quantity.value, service.value])\r\n\r\n    const deleteRaw = () => {\r\n        if (raw.length >= 8) {\r\n            setRaw([...raw].filter((t, i) => i < raw.length - 8))\r\n            setRawTTN([...rawTTN].filter((t, i) => i < rawTTN.length - 11))\r\n            let array = raw.filter((t, i) => i >= raw.length - 8)\r\n            // @ts-ignore\r\n            setTotal(t => +t.toFixed(2) - array[6])\r\n        }\r\n    }\r\n\r\n    let arrDiv: Array<any> = new Array(7).fill('1').map((t,i)=><div key={i} className={css.cell}> </div>)\r\n\r\n    let date = docDate.value.toString()\r\n    let dateStr = `${date[8]}${date[9]}.${date[5]}${date[6]}.${date[0]}${date[1]}${date[2]}${date[3]}`\r\n    // @ts-ignore\r\n    let totalOfString = numOfString(endRaw[6]).toUpperCase()\r\n    return (<div>\r\n\r\n\r\n            <FormRequisitesFirm bankAccount={bankAccount.value}\r\n                                changeBankAccount={useCallback((e) => bankAccount.onChange(e), [bankAccount.value])}\r\n                                nameFirm={nameFirm.value}\r\n                                address={address.value}\r\n                                changeAddress={useCallback((e) => address.onChange(e), [address.value])}\r\n                                changeUnp={useCallback((e) => unp.onChange(e), [unp.value])}\r\n                                changeNameFirm={useCallback((e) => nameFirm.onChange(e), [nameFirm.value])}\r\n                                unp={unp.value}\r\n                                val={'customer'}\r\n            />\r\n\r\n            <FormRequisitesFirm bankAccount={bankAccountOwn.value}\r\n                                changeBankAccount={useCallback((e) =>\r\n                                    bankAccountOwn.onChange(e), [bankAccountOwn.value])}\r\n                                nameFirm={nameFirmOwn.value}\r\n                                address={addressOwn.value}\r\n                                changeAddress={useCallback((e) =>\r\n                                    addressOwn.onChange(e), [addressOwn.value])}\r\n                                changeUnp={useCallback((e) =>\r\n                                    unpOwn.onChange(e), [unpOwn.value])}\r\n                                changeNameFirm={useCallback((e) =>\r\n                                    nameFirmOwn.onChange(e), [nameFirmOwn.value])}\r\n                                unp={unpOwn.value}\r\n                                val={'executor'}\r\n            />\r\n            <FormRequisitesAct docNumber={docNumber.value}\r\n                               changeDocNumber={useCallback((e) => docNumber.onChange(e), [docNumber.value])}\r\n                               changeService={useCallback((e) => service.onChange(e), [service.value])}\r\n                               changeUnit={useCallback((e) => unit.onChange(e), [unit.value])}\r\n                               changeQuantity={useCallback((e) => quantity.onChange(e), [quantity.value])}\r\n                               changePrice={useCallback((e) => price.onChange(e), [price.value])}\r\n                               changeVat={useCallback((e) => vat.onChange(e), [vat.value])}\r\n                               changeDocDate={useCallback((e) => docDate.onChange(e), [docDate.value])}\r\n                               clearButton={clearButton}\r\n                               service={service.value}\r\n                               docDate={docDate.value}\r\n                               vat={vat.value}\r\n                               price={price.value}\r\n                               quantity={quantity.value}\r\n                               unit={unit.value}\r\n\r\n            />\r\n            <div>\r\n                <button onClick={addStrInTable}> Добавить в таблицу</button>\r\n                <button onClick={deleteRaw}> Удалить строку</button>\r\n            </div>\r\n            {error && <p style={{color: 'red'}}>\"Поля выделенные красным обязательны для заполнения!!!\"</p>}\r\n            <style type=\"text/css\"\r\n                   media=\"print\">{'@media print { body { -webkit-print-color-adjust: exact; } ' +\r\n            '@page { size: A4; margin-left: 15mm !important }}'}</style>\r\n            <div ref={ref}>\r\n                {props.val !== 'ttn_form' && <FormToPrintAct\r\n                                nameOfForm={props.val} docNumber={docNumber.value}\r\n                                docDate={docDate.value} dateStr={dateStr}\r\n                                raw={raw} vat={vat.value} endRaw={endRaw}\r\n                                arrDiv={arrDiv} totalOfString={totalOfString}\r\n                                address={address.value} addressOwn={addressOwn.value}\r\n                                bankAccount={bankAccount.value} bankAccountOwn={bankAccountOwn.value}\r\n                                nameFirm={nameFirm.value} nameFirmOwn={nameFirmOwn.value}\r\n                                unp={unp.value} unpOwn={unpOwn.value}\r\n                />}\r\n                {props.val === 'ttn_form' && <FormToPrintTTN\r\n                    rawTTN={rawTTN}\r\n                    docDate={docDate.value} dateStr={dateStr}\r\n                    raw={raw} vat={vat.value} endRaw={endRaw}\r\n                    arrDiv={arrDiv} totalOfString={totalOfString}\r\n                    address={address.value} addressOwn={addressOwn.value}\r\n                    bankAccount={bankAccount.value} bankAccountOwn={bankAccountOwn.value}\r\n                    nameFirm={nameFirm.value} nameFirmOwn={nameFirmOwn.value}\r\n                    unp={unp.value} unpOwn={unpOwn.value}\r\n                />}\r\n            </div>\r\n        </div>\r\n    );\r\n});","\r\nfunction plural(n:number, forms:Array<string>) {\r\n\treturn forms[n%10===1 && n%100!==11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2];\r\n}\r\nexport function numOfString(n:number){\r\n    let s1=[['','',''],\r\n        [['один','одна'],['десять','одиннадцать','двенадцать',\r\n            'тринадцать','четырнадцать','пятнадцать','шестнадцать','семнадцать','восемнадцать','девятнадцать'],'сто'],\r\n        [['два','две'],'двадцать','двести'],\r\n        ['три','тридцать','триста'],\r\n        ['четыре','сорок','четыреста'],\r\n        ['пять','пятьдесят','пятьсот'],\r\n        ['шесть','шестьдесят','шестьсот'],\r\n        ['семь','семьдесят','семьсот'],\r\n        ['восемь','восемьдесят','восемьсот'],\r\n        ['девять','девяносто','девятьсот']];\r\n    let b=[['копейка','копейки','копеек'],\r\n        ['белорусский рубль',' белорусских рубля','белорусских рублей'],\r\n        ['тысяча','тысячи','тысяч'],\r\n        ['миллион','миллиона','миллионов'],\r\n        ['миллиард','миллиарда','миллиардов']\r\n    ];\r\n\r\n    function m999(n:number,b:Array<Array<string>>,f:number){\r\n        let s='';\r\n        let t=s1[Math.floor(n/100)%10][2];\r\n        if(t)s+=t+' ';\r\n\r\n        let d=Math.floor(n/10)%10;\r\n        t=s1[d][1];\r\n        if(t instanceof Array){\r\n            t=t[n%10];\r\n            if(t)s+=t+' ';\r\n        }else{\r\n            if(t)s+=t+' ';\r\n            t=s1[n%10][0];\r\n            if(t instanceof Array)t=t[f===0 || f===2?1:0];\r\n            if(t)s+=t;\r\n        }\r\n\r\n        return s+' '+plural(n,b[f])+(f>1?' ':'');\r\n    }\r\n\r\n    let i = Math.floor(n + 0.005),\r\n        f = Math.floor(((n - i) * 100) + 0.5),\r\n        s='';\r\n    for (let j=1; i > 0.9999; i/=1000) {\r\n        s=m999(Math.floor(i % 1000),b,j)+s;\r\n        j++;\r\n    }\r\n    if(f>0)s=s+' '+m999(f,b,0)\r\n    return s;\r\n}\r\n\r\n","import React, {useRef} from 'react';\r\nimport {useReactToPrint} from 'react-to-print';\r\nimport {ComponentToPrint} from '../Print';\r\nimport css from './form.module.css'\r\n\r\ntype TypeFormProps = {\r\n    form: string\r\n}\r\n\r\nexport const Form = ({form}: TypeFormProps) => {\r\n    const componentRef = useRef(null);\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    return (\r\n        <div className={css.form}>\r\n            <button style={{margin: \"20px 20px\", width: '150px', height: '70px', backgroundColor: 'yellow'}}\r\n                    onClick={handlePrint}>Распечатать или сохранить в файл\r\n            </button>\r\n            <div>\r\n                {form === 'act_form' && <ComponentToPrint ref={componentRef} val={'act_form'}/>}\r\n                {form === 'invoice_form' && <ComponentToPrint ref={componentRef} val={'invoice_form'}/>}\r\n                {form === 'ttn_form' && <ComponentToPrint ref={componentRef} val={'ttn_form'}/>}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};","import React from 'react';\nimport {Route, Routes} from 'react-router-dom';\nimport './App.css';\nimport Home from \"./components/home\";\nimport Navbar from \"./components/navbar\";\nimport {Form} from \"./components/Form\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <Routes>\n                <Route path=\"home\" element={<Home />} />\n                <Route path=\"act_form\" element={<Form form={'act_form'} />}/>\n                <Route path=\"invoice_form\" element={<Form form={'invoice_form'} />}/>\n                <Route path=\"ttn_form\" element={<Form form={'ttn_form'} />}/>\n            </Routes>\n\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n    <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}