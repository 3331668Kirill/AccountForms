{"version":3,"sources":["Modal.tsx","FormRequisitesFirm.tsx","utils/useInput.ts","FormRequisitesAct.tsx","Print.tsx","ActForm.tsx","App.tsx","reportWebVitals.ts","index.tsx","print.module.css"],"names":["Modal","active","setActive","children","className","onClick","e","stopPropagation","FormRequisitesFirm","React","memo","unp","changeUnp","changeNameFirm","changeAddress","changeBankAccount","nameFirm","bankAccount","address","useState","modalActive","setModalActive","console","log","style","margin","padding","fontSize","backgroundColor","type","id","value","onChange","maxLength","width","useInput","initialValue","setValue","currentTarget","localStorage","setItem","reset","useInputNum","ev","isFinite","FormRequisitesAct","docNumber","changeDocNumber","service","vat","changeVat","docDate","changeQuantity","quantity","changePrice","price","changeService","unit","changeUnit","changeDocDate","clearButton","css","ComponentToPrint","forwardRef","props","ref","raw","setRaw","endRaw","setEndRaw","total","setTotal","error","setError","getItem","cost","toFixed","costVat","useEffect","useCallback","arrDiv","i","cell","date","toString","dateStr","media","copyRaw","t","length","filter","array","color","grid","cell_1","cell_3","cell_5","customer","map","table","table_2","table_5","index","table_4","cell_4","ActForm","componentRef","useRef","handlePrint","useReactToPrint","content","current","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ffda7c31.chunk.js","sourcesContent":["import React, {Dispatch} from \"react\";\r\nimport \"./modal.css\"\r\n\r\ntype ModalPropsType = {\r\n    active:boolean\r\n    setActive:Dispatch<boolean>\r\n    children:React.ReactChild | React.ReactNode\r\n}\r\n\r\n\r\nexport const Modal = ({active, setActive, children}:ModalPropsType) =>{\r\n\r\n    return (\r\n        <div className={active?'modal active':'modal'} onClick={()=>setActive(false)}>\r\n        <div className={active?'modal_content active':'modal_content'} onClick={(e)=>e.stopPropagation()}>\r\n            {children}\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Modal} from \"./Modal\";\r\n\r\ninterface TypePropsFormRequisitesFirm {\r\n    unp: string|number\r\n    changeUnp: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeNameFirm: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeAddress: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeBankAccount: (e: ChangeEvent<HTMLInputElement>) => void\r\n    bankAccount: string\r\n    nameFirm: string\r\n    address: string\r\n}\r\n\r\nexport const FormRequisitesFirm = React.memo(({\r\n                                                  unp,\r\n                                                  changeUnp,\r\n                                                  changeNameFirm,\r\n                                                  changeAddress,\r\n                                                  changeBankAccount,\r\n                                                  nameFirm,\r\n                                                  bankAccount,\r\n                                                  address\r\n                                              }: TypePropsFormRequisitesFirm) => {\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    console.log(\"render Form\")\r\n    return (<div>\r\n        <button style={{margin: \"10px 20px\", padding: \"20px\", fontSize: \"1rem\", backgroundColor:'lightgreen'}}\r\n                onClick={() => setModalActive(true)}\r\n        > РЕКВИЗИТЫ ЗАКАЗЧИКА\r\n        </button>\r\n        <Modal active={modalActive} setActive={setModalActive}>\r\n            <label>введите УНП: </label>\r\n            <input type={\"text\"} id={'unp'} value={unp} onChange={changeUnp} maxLength={9}/>\r\n            <div>\r\n                <label>введите наименование организации: </label>\r\n                <input type={\"text\"} id={'nameFirm'} value={nameFirm} onChange={changeNameFirm} maxLength={20}/>\r\n            </div>\r\n            <div>\r\n                <label>введите адрес организации: </label>\r\n                <input type={\"text\"} id={'address'} style={{width: '250px'}}\r\n                       value={address} onChange={changeAddress} maxLength={40}/>\r\n            </div>\r\n            <div>\r\n                <label>введите расчетный счет организации: </label>\r\n                <input type={\"text\"} id={'bankAccount'} style={{width: '250px'}}\r\n                       value={bankAccount} onChange={changeBankAccount} maxLength={28}/>\r\n            </div>\r\n        </Modal>\r\n\r\n    </div>)\r\n})","import {ChangeEvent, useState} from \"react\";\r\n\r\n\r\nexport function useInput(initialValue:string){\r\n    const [value,setValue] = useState(initialValue)\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        setValue(e.currentTarget.value)\r\n        localStorage.setItem(e.currentTarget.id, e.currentTarget.value)\r\n    }\r\n    const reset = (e:string) => {\r\n      setValue(e)\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange,\r\n        reset\r\n    }\r\n}\r\n\r\nexport function useInputNum(initialValue:string|number){\r\n    const [value,setValue] = useState(initialValue)\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        localStorage.setItem(e.currentTarget.id, e.currentTarget.value)\r\n        let ev = e.currentTarget.value\r\n        if (isFinite(+ev)) return setValue(ev)\r\n        return null\r\n    }\r\n    const reset = (e:string) => {\r\n        setValue(e)\r\n    }\r\n    return {\r\n        value,\r\n        onChange,\r\n        reset\r\n    }\r\n}","import css from \"./print.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ninterface TypePropsFormRequisitesAct {\r\n    docNumber: string | number\r\n    docDate: string | number\r\n    service: string | number\r\n    quantity: string | number\r\n    unit: string | number\r\n    price: string | number\r\n    vat: string | number\r\n    changeDocNumber: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeDocDate: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeUnit: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeService: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeQuantity: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePrice: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeVat: (e: ChangeEvent<HTMLInputElement>) => void\r\n    clearButton: () => void\r\n}\r\n\r\nexport const FormRequisitesAct = React.memo(({\r\n                                      docNumber, changeDocNumber, service, vat, changeVat, docDate,\r\n                                      changeQuantity, quantity, changePrice, price,\r\n                                      changeService, unit, changeUnit, changeDocDate,clearButton,\r\n                                  }: TypePropsFormRequisitesAct) => {\r\n\r\n    console.log(\"render Act\")\r\n    return (<div>\r\n            <div>\r\n                <div>\r\n                    <label>введите дату документа: </label>\r\n                    <input type={\"date\"} id={'docDate'}\r\n                           value={docDate}\r\n                           onChange={changeDocDate}\r\n                           />\r\n                </div>\r\n                <div>\r\n                    <label>введите номер документа: </label>\r\n                    <input type={\"text\"} id={'docNumber'}\r\n                           value={docNumber}\r\n                           onChange={changeDocNumber}\r\n                           maxLength={9}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите наименование услуги: </label>\r\n                    <input type={\"text\"} className={service === '' ? css.service : ''}\r\n                           id={'service'} value={service} onChange={changeService}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите ед изм: </label>\r\n                    <input type={\"text\"} id={'unit'} value={unit} onChange={changeUnit} maxLength={3}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите кол-во: </label>\r\n                    <input type={\"text\"} id={'quantity'} className={quantity === '' ? css.service : ''}\r\n                           value={quantity} onChange={changeQuantity}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите цену: </label>\r\n                    <input type={\"text\"} id={'price'} className={price === '' ? css.service : ''}\r\n                           value={price} onChange={changePrice}/>\r\n                </div>\r\n                <div>\r\n                    <label>введите НДС %: </label>\r\n                    <input type={\"text\"} id={'vat'} value={vat} onChange={changeVat}/>\r\n                </div>\r\n\r\n                <button onClick={clearButton}> Очистить поля ввода </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport css from './print.module.css'\r\nimport {FormRequisitesFirm} from \"./FormRequisitesFirm\";\r\nimport {useInput, useInputNum} from \"./utils/useInput\";\r\nimport {FormRequisitesAct} from \"./FormRequisitesAct\";\r\n\r\nexport const ComponentToPrint = React.forwardRef((props, ref: any) => {\r\n    let initialRaw: Array<string | number | null> = []\r\n    const [raw, setRaw] = useState<Array<string | number | null>>(initialRaw)\r\n    const [endRaw, setEndRaw] = useState<Array<string | number | null>>([])\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [error, setError] = useState<boolean>(false)\r\n    const docNumber = useInput('')\r\n    const docDate = useInput('')\r\n    const service = useInput('')\r\n    const unit = useInput('')\r\n    // @ts-ignore\r\n    const nameFirm = useInput(localStorage.getItem('nameFirm'))\r\n    // @ts-ignore\r\n    const address = useInput(localStorage.getItem('address'))\r\n    // @ts-ignore\r\n    const bankAccount = useInput(localStorage.getItem('bankAccount'))\r\n    const price = useInputNum('')\r\n    const quantity = useInputNum('')\r\n    // @ts-ignore\r\n    const unp = useInputNum(localStorage.getItem('unp'))\r\n    const vat = useInputNum('20')\r\n\r\n    let cost = +(+quantity.value * +price.value).toFixed(2)\r\n    let costVat = +(cost * +vat.value / 100).toFixed(2)\r\n\r\n    useEffect(() => {\r\n        setEndRaw(['', '', '', '', '', 'Итого:', total < 0 ? 0 : +total.toFixed(2), null])\r\n    }, [raw, total])\r\n\r\n    const addStrInTable = () => {\r\n            setError(true)\r\n            if (service.value !== '' && price.value !== '' && quantity.value !== '') {\r\n                let copyRaw = [...raw]\r\n                setRaw([...copyRaw, service.value, unit.value,\r\n                    quantity.value, price.value, cost, vat.value, +(+costVat + +cost).toFixed(2), null])\r\n                setTotal(t => +t.toFixed(2) + +costVat.toFixed(2) + +cost.toFixed(2))\r\n                setError(false)\r\n            }\r\n      }\r\n\r\n    const clearButton = useCallback(() => {\r\n        unit.reset('')\r\n        price.reset('')\r\n        quantity.reset('')\r\n        service.reset('')\r\n        setError(false)\r\n    },[unit.value,price.value,quantity.value,service.value])\r\n\r\n    const deleteRaw = () => {\r\n        if (raw.length >= 8) {\r\n            setRaw([...raw].filter((t, i) => i < raw.length - 8))\r\n            let array = raw.filter((t, i) => i >= raw.length - 8)\r\n            // @ts-ignore\r\n            setTotal(t => +t.toFixed(2) - array[6])\r\n        }\r\n    }\r\n\r\n    let arrDiv = []\r\n    for (let i = 0; i <= 6; i++) {\r\n        arrDiv[i] = <div key={i} className={css.cell}></div>\r\n    }\r\n\r\n    let date = docDate.value.toString()\r\n    let dateStr = `${date[8]}${date[9]}.${date[5]}${date[6]}.${date[0]}${date[1]}${date[2]}${date[3]}`\r\n\r\n    return (<div>\r\n            <style type=\"text/css\"\r\n                   media=\"print\">{'@media print { body { -webkit-print-color-adjust: exact; } ' +\r\n            '@page { size: A4; margin-left: 15mm !important }}'}</style>\r\n\r\n            <FormRequisitesFirm bankAccount={bankAccount.value}\r\n                                changeBankAccount={useCallback((e) => bankAccount.onChange(e), [bankAccount.value])}\r\n                                nameFirm={nameFirm.value}\r\n                                address={address.value}\r\n                                changeAddress={useCallback((e) => address.onChange(e), [address.value])}\r\n                                changeUnp={useCallback((e) => unp.onChange(e), [unp.value])}\r\n                                changeNameFirm={useCallback((e) => nameFirm.onChange(e), [nameFirm.value])}\r\n                                unp={unp.value}\r\n            />\r\n            <FormRequisitesAct docNumber={docNumber.value}\r\n                               changeDocNumber={useCallback((e)=>docNumber.onChange(e),[docNumber.value])}\r\n                               changeService={useCallback((e)=>service.onChange(e),[service.value])}\r\n                               changeUnit={useCallback((e)=>unit.onChange(e),[unit.value])}\r\n                               changeQuantity={useCallback((e)=>quantity.onChange(e),[quantity.value])}\r\n                               changePrice={useCallback((e)=>price.onChange(e),[price.value])}\r\n                               changeVat={useCallback((e)=>vat.onChange(e),[vat.value])}\r\n                               changeDocDate={useCallback((e)=>docDate.onChange(e),[docDate.value])}\r\n                               clearButton={clearButton}\r\n                               service={service.value}\r\n                               docDate={docDate.value}\r\n                               vat={vat.value}\r\n                               price={price.value}\r\n                               quantity={quantity.value}\r\n                               unit={unit.value}\r\n\r\n            />\r\n            {<div>\r\n                <button onClick={addStrInTable}> Добавить в таблицу</button>\r\n                <button onClick={deleteRaw}> Удалить строку</button>\r\n            </div>}\r\n            {error && <p style={{color: 'red'}}>\"Поля выделенные красным обязательны для заполнения!!!\"</p>}\r\n            <div ref={ref} className={css.grid}>\r\n                <div className={css.cell_1}>АКТ выполненных работ</div>\r\n                <div className={css.cell_3}>№{docNumber.value} от {docDate.value && dateStr}</div>\r\n                <div className={css.cell_5}>г.Минск</div>\r\n                <div\r\n                    className={css.customer}> Заказчик: <span>{nameFirm.value}\r\n                    <div>юр. адрес: {address.value}</div>\r\n                    <div>УНП: {unp.value}</div>\r\n\r\n                    <div> р/с: {bankAccount.value}</div>\r\n                    </span></div>\r\n                {arrDiv.map(t => t)}\r\n                <div className={css.cell}> Исполнитель: OOO \"Kopyta\"</div>\r\n                {arrDiv.map(t => t)}\r\n                <div className={css.table}> Наименование услуги (работы)</div>\r\n                <div className={css.table_2}> Ед. изм.</div>\r\n                <div className={css.table_2}> Количество</div>\r\n                <div className={css.table_2}> Цена за ед, бел.руб</div>\r\n                <div className={css.table_2}> Стоимость без НДС, бел.руб</div>\r\n                <div className={css.table_2}> НДС, %</div>\r\n                <div className={css.table_2}> Стоимость с НДС, бел.руб</div>\r\n                <div className={css.table_5}></div>\r\n                {raw.map((t, index) => {\r\n                    return (\r\n                        <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>\r\n                    )\r\n                })\r\n                }\r\n                {endRaw.map((t, index) => {\r\n                    return (\r\n                        <div key={index} className={t !== null ? css.table_4 : css.table_5}> {t} </div>\r\n                    )\r\n                })\r\n                }\r\n                <div className={css.cell_4}> Заказчик ________________</div>\r\n                <div></div>\r\n                <div className={css.cell_4}> Исполнитель_______________</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n});","import React, { useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { ComponentToPrint } from './Print';\r\n\r\nexport const ActForm = () => {\r\n    const componentRef = useRef(null);\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <ComponentToPrint ref={componentRef} />\r\n            <button style={{width:'150px', height: '125px', backgroundColor:'yellow'}} onClick={handlePrint}>Распечатать или сохранить в файл</button>\r\n        </div>\r\n    );\r\n};","import React from 'react';\nimport {ActForm} from './ActForm'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n       <ActForm/>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"print_grid__1MsHo\",\"cell_1\":\"print_cell_1__19slu\",\"customer\":\"print_customer__8_EfK\",\"cell_2\":\"print_cell_2__1sUf-\",\"cell_3\":\"print_cell_3__2AEs2\",\"cell_4\":\"print_cell_4__3tbOH\",\"cell_5\":\"print_cell_5__2tydo\",\"table\":\"print_table__1XRJ7\",\"table_2\":\"print_table_2__1Nfoc\",\"table_3\":\"print_table_3__3tKi8\",\"table_4\":\"print_table_4__2a6f3\",\"table_5\":\"print_table_5__1u907\",\"service\":\"print_service__TlFkW\"};"],"sourceRoot":""}